# Extracted content
Source: subjects/Dbd/Exámenes cursos anteriores/2020-2021/2020-DBD-1P_solución.pdf

### Page 1
1er Parcial de Diseño y Gestión de Bases de Datos (26/10/2020)
1

1. a) 0’2 puntos b) 0’6 puntos
a) Indica clara y concisamente qué significa procesar correctamente una transacción.
b) Dado el esquema de abajo:
• Indica una actualización de la base de datos (expresada en lenguaje natural) que necesite de una
transacción para llevarse a cabo en el esquema.
• Indica para cada restricción si debe compr obar en modo INMEDIATO O DIFERIDO y si es DIFERIBLE o NO
DIFERIBLE.
• Define la transacción que resolvería la actualización del primer punto  (para esto puedes usar las
instrucciones del SQL o en castellano pero de forma clara y no ambigua).
Asignatura(cod_asg: char(5), nombre: char(50), semestre: char(2))
 CP:{cod_asg}
 VNN:{nombre,semestre}
Profesor(dni: char(9), nombre: char(80), teléfono: char(8))
 CP:{dni}
 VNN:{nombre}
Docencia(dni: char(9), cod_asg: char(5))
 CP:{dni,cod_asg}
 CAj:{dni}→Profesor(dni)
 CAj:{cod_asg}→Asignatura(cod_asg)

Restricción general: “Todo profesor debe impartir docencia de al menos una asignatura”.

2. a) 0’2 puntos b) 0’25 puntos c) 0’75 puntos
a) En qué estrategia o estrategias de actualización no son necesarios los puntos de control. Justifica brevemente
tu respuesta.
b) ¿En un sistema cuya estrategia de actualización sea DIFERIDA /FORZAR es necesario el diario? Justifica
brevemente tu respuesta.
c) En el diagrama de más abajo se muestran las transacciones ejecutadas en el sistema. Supón que antes de hacer
la copia de seguridad se bajan a disco todas las modificaciones realizadas por t ransacciones confirmadas. En
el instante t k se produce un fallo  que obliga al SGBD a realizar tareas de recuperación cuando se vuelve a
arrancar el sistema. Para cada uno de los supuestos siguientes indica qué haría el SGBD para cada transacción
en cada una de las cuatro estrategias posibles de actualización:
i. El fallo supone la pérdida de memoria principal.
ii. El fallo supone la pérdida de la memoria secundaria donde está almacenada la base de datos, pero
la copia del diario en disco no se ha perdido.
iii. El fallo supone la pérdida de la memoria secundaria donde está almacenada la base de datos y
también se ha perdido la copia del diario en disco.

### Page 2
1er Parcial de Diseño y Gestión de Bases de Datos (26/10/2020)
2

3. a) 0’3 puntos b) 0’5 puntos c) 0’4 puntos
Dado el siguiente plan de ejecución concurrente, donde las p rimeras operaciones determinan el inicio de las
transacciones: P= r1(x), r2(x), w2(x), r2(y), r1(z), w3(y), r2(k), c2, r3(k), r1(k), c1, w3(z), c3
a) Justifica que el plan de ejecución es serializable por conflictos.
¿Cuáles son los posibles planes en serie equivalentes por conflictos?
¿Es el plan cronológico uno de ellos?

b) Comprueba si el protocolo B2F explícito admite el plan P  dando una traza de su  ejecución que incluya los
bloqueos y desbloqueos necesarios . Supón que las cuatro variables están desbloqueadas al inicio del plan.
También puedes usar promociones y degradación de los bloqueos. Responde a esta pregunta en la tabla que
se te proporciona.

c) Comprueba si el protocolo OMT admite el plan P dando una traza donde se vean las marcas de tiempo de los
elementos de datos durante la ejecución del plan . Supón que las cuatro variables tienen unas marcas de
tiempo de lectura y escritura con un valor q que es anterior al inicio del plan. Responde a esta pregunta en la
tabla que se te proporciona.

4. a) 0’4 puntos b) 0’4 puntos
a) Supón un entorno concurrente controlado por el protocolo Multiversión en el que una transacción T  ejecuta
la instrucción w(x). Supón también que hay tres versiones del elemento x (sean x0, x1 y x2), que las marcas de
tiempo son las que se indican más abajo y que ti < tj si i<j:


MT(T) = t8


¿Puede T ejecutar esa operación?
¿Qué condición o condiciones se evalúan para permitir su ejecución?
¿Qué se controla con esa condición?
b) ¿Qué es un plan recuperable? Pon un ejemplo de plan concurrente recuperable que tenga lectura sucia y uno
de plan concurrente no recuperable también con lectura sucia.

 MT_L MT_E
x0 t1 t1
x1 t9 t2
x2 t10 t10

### Page 3
SOLUCIONES 1er Parcial de Diseño y Gestión de Bases de Datos (26/10/2020)
3

1 a) Procesar correctamente una transacción significa que:
a) todas las operaciones de la transacción se ejecutan con éxito y sus cambios (actualizaciones) quedan grabados
permanentemente en la base de datos,
o bien
(b) la transacción no tiene ningún efecto en la base de datos.
1 b)
• Actualización: “Insertar un nuevo profesor con dni ‘0000’, nombre ‘Petra Pérez’ y teléfono ‘1111’. Petra va a
impartir docencia en la asignatura de código ‘11596’ ”
• Modo de comprobación de las restricciones:
Asignatura(cod_asg: char(5), nombre: char(50), semestre: char(2))
  CP:{cod_asg}     INMEDIATA-DIFERIBLE
  VNN:{nombre,semestre}   INMEDIATA-DIFERIBLE
 Profesor(dni: char(9), nombre: char(80), teléfono: char(8))
  CP:{dni}     INMEDIATA-DIFERIBLE
  VNN:{nombre}     INMEDIATA-DIFERIBLE
Docencia(dni: char(9), cod_asg: char(5))
  CP:{dni,cod_asg}    INMEDIATA-DIFERIBLE
  CAj:{dni}→Profesor(dni)   DIFERIDA-DIFERIBLE
  CAj:{cod_asg}→Asignatura(cod_asg)  INMEDIATA-DIFERIBLE

Restricción general:
  RG1: “Todo profesor debe impartir  DIFERIDA-DIFERIBLE
docencia de al menos una asignatura”.
• Transacción:
INICIO:
  INSERT INTO Profesor VALUES (‘0000’, ‘Petra Pérez’, ‘1111’);
  INSERT INTO Docencia VALUES (‘0000’,’11596’);
 COMMIT;
2 a) De  los puntos de control se puede prescindir cuando la estrategia es FORZAR  ya que en este caso los cambios
realizados por una transacción son bajados a disco cuando se confirma la transacción. Cuando se establece un punto de
control, los cambios realizados por transacciones confirmadas son llevados a disco, en el caso de la estrategia forzar se
sabe que, si la transacción está confirmada, estos cambios ya están en disco.

2b) Del diario no se puede prescindir nunca, ni siquiera con la estrategia DIFERIDA/FORZAR ya que, aunque el algoritmo
en este caso es NO DESHACER/NO REHACER sería necesario en dos casos:
• Fallo del disco: sería necesario para rehacer sobre la copia de seguridad todas las transacciones confirmadas
desde la fecha de la copia de seguridad.
• Para deshacer transacciones anuladas por el usuario (rollback) o por el sistema sin que haya habido ningún
fallo. El diario se usará para rehacer los buffers  de datos en memoria que pudieran haber sido modificados
por la transacción anulada.
2 c)
i) La recuperación dependerá de la estrategia de actualización:
Actualización INMEDIATA-NO FORZAR→ Algoritmo DESHACER-REHACER
T1 T2 T3 T4 T5 T6 T7 T8
Nada Nada Nada Nada Nada Rehacer Nada Deshacer
Actualización INMEDIATA- FORZAR→ Algoritmo DESHACER-NO REHACER
T1 T2 T3 T4 T5 T6 T7 T8
Nada Nada Nada Nada Nada Nada Nada Deshacer

### Page 4
SOLUCIONES 1er Parcial de Diseño y Gestión de Bases de Datos (26/10/2020)
4

Actualización DIFERIDA-NO FORZAR→ Algoritmo NO DESHACER-REHACER
T1 T2 T3 T4 T5 T6 T7 T8
Nada Nada Nada Nada Nada Rehacer Nada Nada
Actualización DIFERIDA- FORZAR→ Algoritmo NO DESHACER-NO REHACER
T1 T2 T3 T4 T5 T6 T7 T8
Nada Nada Nada Nada Nada Nada Nada Nada
ii. Si se ha perdido la base de datos en disco, pero no el diario en disco, independientemente de la estrategia de
actualización, el SGBD recuperaría la copia de seguridad del instante t j y aplicaría los cambios realizados por las
transacciones confirmadas antes del fallo y después de la copia de seguridad, es decir reharía T6 usando para ello
el diario en disco. Con el resto de las transacciones no habría que hacer nada ya que T2, T5, T7 y T8 no han dejado
rastro en la copia de seguridad y T1, T3 y T4 tenían sus cambios en él (por la suposición que hemos hecho de que
antes de hacer la copia de seguridad se han bajado todos los cambios realizados por transacciones confirmadas).
iii. Si se ha perdido la base de datos en disco y también el diario en disco, independientemente de la estrategia de
actualización, el SGBD recuperaría la copia de seguridad del instante tj no pudiendo rehacer ninguna transacción
de las confirmadas después de ese instante ya que no hay información que lo permita (el diario se ha perdido). Es
decir, se perdería el efecto de T6.

3 a) El grafo de serialización es el siguiente:

Como el grafo no tiene ciclos, el plan es serializable por conflictos.
El único plan en serie equivalente por conflictos es: T
1 -> T2 -> T3
El plan en serie cronológico es T1 -> T2 -> T3 ya que en él las transacciones se procesan siguiendo el orden de sus marcas
de tiempo en el plan concurrente y sí es equivalente por conflictos.

### Page 5
SOLUCIONES 1er Parcial de Diseño y Gestión de Bases de Datos (26/10/2020)
5


3 b) El plan sí que es admitido por el protocolo de bloqueos B2F explícito como se puede ver a continuación (no es la única
solución posible):
 Estado de bloqueo de los elementos
 x y z k
 T1 T2 T3 BL BE BL BE BL BE BL B
E
t0 B_L(x)
t1 r1(x)   T1
t2 B_L(z)   T1    T1
t3 B_L(k)   T1    T1  T1
t4 D(x)       T1  T1
t5  B_E(x)      T1  T1
t6  r2(x)   T2   T1  T1
t7  w2(x)   T2   T1  T1
t8  B_L(y)   T2   T1  T1
t9  r2(y)   T2 T2  T1  T1
t10 r1(z)    T2 T2  T1  T1
t11 D(z)    T2 T2    T1
t12  B_L(k)   T2 T2    T1
t13  D(y)   T2     T1,T2
t14   B_E(y)  T2     T1,T2
t15   w3(y)  T2  T3   T1,T2
t16  r2(k)   T2  T3   T1,T2
t17  D(x)     T3   T1,T2
t18  D(k)     T3   T1
t19  c2     T3   T1
t20   B_L(k)    T3   T1
t21   r3(k)    T3   T1,T3
t22 r1(k)      T3   T1,T3
t23 D(k)      T3   T3
t24 c1      T3   T3
t25   B_E(z)    T3   T3
t26   w3(z)    T3  T3 T3
t27   D(y)    T3  T3 T3
t28   D(k)      T3 T3
t29   D(z)
t30   c3
Comentarios:
• B_L(x): bloqueo de lectura sobre x.
• B_E(x): bloqueo de escritura sobre x.
• D(x): desbloqueo de x.
• El plan presentado que incluye los bloqueos no es el único posible (por ejemplo, el desbloqueo de z en t10, podría
hacerse más tarde siempre que fuera antes de la petición de bloqueo de z por T3).
Este plan es equivalente al plan en serie T 1 -> T2 -> T3 ya que, en ambos planes, los pares de operaciones en conflicto
aparecen en el mismo orden. Éste es además el plan en serie cronológico.

### Page 6
SOLUCIONES 1er Parcial de Diseño y Gestión de Bases de Datos (26/10/2020)
6

3 c) MT_(T1)= t0, MT_(T2)= t1, MT_(T3)= t5

Dado que T1, T2, y T3 no han empezado antes de q, las marcas de lectura y escritura de x ,y, z y k son, con certeza, menores
que q. Las celdas sombreadas indican un cambio de valor respecto al instante de tiempo anterior.

Protocolo OMT x y z k
tiempo T1 T2 T3 MT_L MT_E MT_L MT_E MT_L MT_E MT_L MT_E
    q q q q q q q q
t0 r1(x)   t0 q q q q q q q
t1  r2(x)  t1 q q q q q q q
t2  w2(x)  t1 t1 q q q q q q
t3  r2(y)  t1 t1 t1 q q q q q
t4 r1(z)   t1 t1 t1 q t0 q q q
t5   w3(y) t1 t1 t1 t5 t0 q q q
t6  r2(k)  t1 t1 t1 t5 t0 q t1 q
t7  c2  t1 t1 t1 t5 t0 q t1 q
t8   r3(k) t1 t1 t1 t5 t0 q t5 q
t9 r1(k)   t1 t1 t1 t5 t0 q t5 q
t10 c1   t1 t1 t1 t5 t0 q t5 q
t11   w3(z) t1 t1 t1 t5 t0 t5 t5 q
t15   c3 t1 t1 t1 t5 t0 t5 t2 q

  El plan es aceptado por el protocolo OMT.
4)
a) De las tres versiones de x que hay se busca la que tenga mayor marca de tiempo de escritura que cumpla que:
MT_E(xi) <= MT(T). En este caso esa versión es x1. Dado que MT_L(x1) > MT(T), la operación es rechazada ya que
x1 ha sido leída por una transacción más joven que T. Con esta condición se controla que la versión “anterior” al
elemento de datos x no ha sido leída por ninguna transacción T* posterior (cronológicamente) a T.

b) Un plan recuperable es un plan en el que una transacción T no se puede confirmar antes de que se confirmen
todas las transacciones que han actualizado (escrito) un elemento de datos leído por T.
P = r1(x), r2(y), w1(x), r2(x), c1, c2
P’ = r1(x), r2(y), w1(x), r2(x), c2, c1
P es un plan recuperable ya que T2 que lee un elemento de datos ( x) escrito por T1 pero se confirma después
de la confirmación de T1. Hay lectura sucia en la operación r 2(x) ya que el elemento de datos x  ha sido escrito
por T1 y aún no ha sido confirmada cuando T2 lee ese elemento.
P’ es un plan no recuperable ya que T2 que lee un el emento de datos escrito por T1 y se confirma antes de la
confirmación de T1.
