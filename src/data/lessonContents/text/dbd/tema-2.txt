# Topic 2 · Transaction Processing and Integrity (Procesamiento de transacciones e integridad)

## Purpose / Propósito
- Explain how a DBMS manages transactions from their initial state to final persistence. / Explicar cómo un SGBD gestiona transacciones desde su estado inicial hasta la persistencia final.
- Review ACID properties, SQL support, and strategies to guarantee integrity constraints. / Revisar las propiedades ACID, el soporte SQL y las estrategias para asegurar restricciones de integridad.

## Objectives / Objetivos
- Define what a transaction is and describe its states. / Definir qué es una transacción y describir sus estados.
- Relate SQL operations to commits, rollbacks, and checkpoints. / Relacionar operaciones SQL con commits, rollbacks y puntos de control.
- Identify mechanisms supporting atomicity, consistency, isolation, and durability. / Identificar mecanismos que respaldan atomicidad, consistencia, aislamiento y durabilidad.
- Classify integrity constraints and the strategies used to check them. / Clasificar restricciones de integridad y las estrategias para comprobarlas.

## Activities / Actividades
### Concept Review (Repaso de conceptos)
- **Transaction / Transacción:** group of read/write operations acting as an atomic unit. / **Transacción:** grupo de operaciones de lectura/escritura que actúan como unidad atómica.
- Typical states: active, partially committed, committed, failed, aborted. / Estados típicos: activa, parcialmente confirmada, confirmada, fallida, abortada.
- Relevant SQL operations: `SELECT`, `INSERT`, `UPDATE`, `DELETE`, `COMMIT`, `ROLLBACK`, and `SAVEPOINT`. / Operaciones SQL relevantes: `SELECT`, `INSERT`, `UPDATE`, `DELETE`, `COMMIT`, `ROLLBACK` y `SAVEPOINT`.
- ![Transaction lifecycle / Ciclo de vida de una transacción](figure:dbd-tema-2/estados)
  Caption: Transitions triggered by commits, aborts, and failures. / Transiciones provocadas por confirmaciones, abortos y fallos.

### ACID Properties (Propiedades ACID)
- **Atomicity / Atomicidad:** all or nothing, supported by logs and UNDO mechanisms. / **Atomicidad:** todo o nada, soportada por logs y mecanismos de UNDO.
- **Consistency / Consistencia:** moves the database between valid states. / **Consistencia:** mueve la base entre estados válidos.
- **Isolation / Aislamiento:** prevents observable interference between concurrent transactions. / **Aislamiento:** evita interferencias observables entre transacciones concurrentes.
- **Durability / Durabilidad:** committed results survive failures. / **Durabilidad:** los resultados confirmados sobreviven a fallos.
- ![ACID properties and supporting mechanisms / Propiedades ACID y mecanismos de soporte](figure:dbd-tema-2/acid)
  Caption: DBMS components that guarantee each property. / Componentes del SGBD que garantizan cada propiedad.

### Recovery Architecture (Arquitectura de recuperación)
- ![DBMS recovery workflow / Flujo de recuperación de un SGBD](figure:dbd-tema-2/recuperacion)
  Caption: Interactions among the buffer manager, WAL log, checkpoints, and data files. / Interacciones entre buffer manager, log WAL, checkpoints y ficheros de datos.
- Main roles / Roles principales:
  - **Buffer manager:** flushes dirty pages to disk and reports errors. / **Buffer manager:** envía páginas sucias a disco y reporta errores.
  - **Recovery manager:** analyzes the log, generates REDO/UNDO actions, and coordinates rollbacks. / **Recovery manager:** analiza el log, genera acciones REDO/UNDO y coordina rollbacks.
  - **Write-ahead logging (WAL):** records entries before pages to guarantee durability. / **Write-ahead logging (WAL):** escribe el registro antes de las páginas para garantizar durabilidad.
  - **Checkpoints:** capture LSNs and dirty-page tables to bound recovery work. / **Checkpoints:** capturan LSN y tablas de páginas sucias para acotar la recuperación.

### SQL Transaction Control (Control transaccional en SQL)
- Implicit start with the first DML statement; ends with `COMMIT` or `ROLLBACK`. / Inicio implícito con la primera instrucción DML; finaliza con `COMMIT` o `ROLLBACK`.
- Explicit demarcation using `BEGIN/START TRANSACTION`. / Delimitación explícita con `BEGIN/START TRANSACTION`.
- Use `SAVEPOINT` for partial rollbacks. / Uso de `SAVEPOINT` para deshacer parcialmente.
- Configure client auto-commit to decide whether each statement is confirmed automatically. / Configuración de auto-commit en clientes para decidir si cada sentencia se confirma automáticamente.

### Integrity Enforcement (Garantía de integridad)
- Constraint types / Tipos de restricciones:
  - **Primary key (PK)** and **uniqueness**. / **Clave primaria (CP)** y **unicidad**.
  - **Foreign keys (FK)** with `ON DELETE/UPDATE` actions (RESTRICT, CASCADE, SET NULL, SET DEFAULT). / **Claves ajenas (CAj)** con acciones `ON DELETE/UPDATE` (RESTRICT, CASCADE, SET NULL, SET DEFAULT).
  - **Domain and `CHECK` constraints. / Restricciones de dominio y `CHECK`.**
  - **Triggers** for advanced business rules. / **Triggers** para reglas de negocio avanzadas.
- Validation strategies / Estrategias de comprobación:
  - **Immediate:** verify before modifying; needs locks but prevents inconsistent states. / **Inmediata:** verifica antes de modificar; requiere bloqueos pero evita estados inconsistentes.
  - **Deferred:** allow temporary inconsistency and validate at commit; set as `DEFERRABLE INITIALLY DEFERRED` in SQL. / **Diferida:** permite inconsistencia temporal y valida al confirmar; marcar como `DEFERRABLE INITIALLY DEFERRED` en SQL.
- Declare constraints in `CREATE TABLE` / `ALTER TABLE` and handle errors via stored procedures. / Declaración en `CREATE TABLE` / `ALTER TABLE` y manejo de errores vía procedimientos almacenados.

### Good Practices (Buenas prácticas)
- Design short transactions that lock few rows. / Diseñar transacciones cortas que bloqueen pocas filas.
- Document deferred constraints and usage conditions. / Documentar restricciones diferibles y condiciones de uso.
- Monitor logs, checkpoints, and backups to maintain durability. / Monitorizar logs, checkpoints y backups para mantener durabilidad.

## Assessment / Evaluación
- Solve exercises identifying a transaction's current state for a given scenario. / Resolver ejercicios donde se identifique el estado actual de una transacción dado un escenario.
- Write SQL queries using `SAVEPOINT` to demonstrate deferred-check strategies. / Escribir consultas SQL que utilicen `SAVEPOINT` y demuestren estrategias de comprobación diferida.
- Create a mind map linking each ACID property to the recovery components that support it. / Elaborar un mapa mental que vincule cada propiedad ACID con los componentes de recuperación que la soportan.
