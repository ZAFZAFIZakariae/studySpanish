# Session 0 · Course introduction for Distributed Applications and Services (Servicios y Aplicaciones Distribuidas)

## General information (Información general)
- **Instructor (Docente):** José M. Bernabéu Aubán (bernabeu@upv.es).
- **Office hours (Tutorías):** on demand.
- **Credits (Créditos):** 4.5 theory/seminars + 1.5 lab.
- **Schedule (Calendario):**
  - Tuesdays: theory and seminars in the classroom (modalidad mixta · blended format).
  - Fridays: seminars, labs, and assessments.
  - Final class session on 16 December.
  - Final exam on 19 December (remote, via Poliformat).

## Course objectives (Objetivos del curso)
- Understand the fundamental concepts of distributed systems (sistemas distribuidos).
- Identify patterns and approaches for designing distributed services (servicios distribuidos).
- Recognize the main challenges: security (seguridad), coordination (coordinación), resource optimization (optimización de recursos).
- Build practical skills through guided lab work (laboratorios guiados).

![Course components (Componentes del curso)](figure:sad-session-0/estructura)
Caption: How theory, seminars, and labs interlock across the course.

## Assessment (Evaluación)
- **Theory exam (Examen teórico):** 25 %.
- **Lab project (Proyecto de laboratorio):** 25 %.
- **Seminars / practical exam (Seminarios / examen práctico):** 25 %.
- **Seminar quizzes (Cuestionarios de seminario):** 25 %.

## Content roadmap (Programa de contenidos)
1. Fundamentals of distributed systems (Fundamentos de sistemas distribuidos).
2. Architectures, coordination, and service contracts (Arquitecturas, coordinación y contratos: SLA, QoS, Cloud).
3. Security and governance (Seguridad y gobierno).
4. Deployment and tooling—NATS, Prometheus, STEP, APISIX, Docker.

## Laboratories (Laboratorios)
- Design and implement an illustrative service that integrates queues, a reverse proxy, authentication, and deployment.
- Work in teams of three people (grupos de tres personas).
- Core technologies: TypeScript or Go, Docker, Git, VS Code.
- Deliver the full repository as a `.tgz` package.

## Requirements and recommendations (Requisitos y recomendaciones)
- Previous knowledge of computer science, programming, and operating systems.
- Suggested experience: TypeScript/Golang, Git, Linux, and collaborative development tooling.
- Time split between in-class sessions and autonomous work (trabajo autónomo).
