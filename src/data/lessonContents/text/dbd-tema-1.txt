# Tema 1 · Sistemas de Gestión de Bases de Datos

## Objetivos de la lección
- Revisar las características que definen a la tecnología de bases de datos moderna.
- Comprender qué componentes y funciones integran un Sistema de Gestión de Bases de Datos (SGBD).
- Recordar la jerarquía de almacenamiento y el ciclo de transferencia de datos entre disco y memoria.
- Comparar las arquitecturas centrales y cliente-servidor empleadas para desplegar SGBD.
- Identificar los objetivos operativos que guían el diseño de un SGBD.

## Mapa de contenidos
- Características de la tecnología de bases de datos.
- Sistemas de gestión de bases de datos.
- Transferencia de datos en un SGBD.
- Arquitecturas básicas de SGBD.
- Objetivos prioritarios de un SGBD.

## 1. Tecnología de bases de datos
Las bases de datos son colecciones estructuradas de datos persistentes que residen en memoria secundaria. La "tecnología de bases de datos" engloba el software que permite definir, crear y manipular esas estructuras, asegurando que el sistema de información de la organización permanece integrado y accesible.

### Propiedades esenciales
- **Soporte del sistema de información**: centraliza la información de la organización y garantiza su persistencia.
- **Servicio a distintos usuarios**: habilita concurrencia segura y vistas parciales adaptadas a cada colectivo.
- **Abstracción de datos**: separa la especificación lógica de las estructuras respecto a su implementación física.
- **Integridad y seguridad**: controla la calidad de los datos, el acceso simultáneo, la recuperación ante fallos y la autorización de usuarios.

### Independencia y niveles de esquema
Se distinguen tres niveles independientes que aportan independencia de datos:
- **Esquema lógico**: describe tablas y relaciones sobre las que se formulan consultas.
- **Esquema físico**: define cómo se materializan esas estructuras en disco (índices, ficheros, heap, etc.).
- **Esquemas externos**: proporcionan vistas parciales para colectivos concretos.

![Esquemas en el laboratorio de Ciclismo](figure:dbd-tema-1/esquemas)
Caption: Entorno del laboratorio BDASI con esquemas lógico y físico, la base de datos Ciclismo en disco y SQL Developer como cliente.

### Panorama general de la tecnología
La combinación de niveles de esquema, control de concurrencia, mecanismos de seguridad y persistencia se visualiza en una arquitectura de capas donde el SGBD actúa como mediador entre aplicaciones y datos.

![Resumen de características de la tecnología de bases de datos](figure:dbd-tema-1/resumen)
Caption: Diagrama que resume integración de datos, vistas parciales, control de integridad y seguridad bajo una arquitectura en niveles.

## 2. Sistemas de gestión de bases de datos (SGBD)
Un SGBD es la herramienta software que implementa un modelo de datos para crear, consultar y administrar bases de datos. Cada modelo propone estructuras concretas (tablas, registros, listas) y operadores para trabajar con ellas.

### Modelos y familias históricas
- Jerárquicos: basados en árboles de segmentos.
- En red: registros enlazados mediante conjuntos.
- Relacionales: tablas de tuplas con álgebra relacional y SQL.
- Objeto-relacionales: extienden el modelo relacional con tipos y constructores orientados a objetos.

### Funciones fundamentales de un SGBD
- **Definición**: lenguajes DDL para describir esquemas.
- **Manipulación**: lenguajes DML para consultas y actualizaciones.
- **Gestión**: herramientas de administración, seguridad, copias y monitorización.

### Concurrencia y paralelismo
Todos los SGBD modernos son multiusuario: coordinan transacciones concurrentes sobre una misma CPU. Algunos también aprovechan el paralelismo distribuido en varias CPUs o nodos para acelerar las operaciones.

## 3. Transferencia de datos en un SGBD
Los SGBD gestionan grandes volúmenes de datos almacenados en discos. Por ello, deben optimizar el movimiento entre memoria secundaria y memoria principal, respetando la jerarquía de almacenamiento.

### Jerarquía de almacenamiento
- **Memoria principal y cachés**: acceso rápido pero capacidad limitada; la CPU opera directamente sobre esta capa.
- **Memoria secundaria**: discos magnéticos, ópticos o cintas con gran capacidad pero acceso más lento.

### Organización en disco
- Las relaciones se guardan en ficheros compuestos por registros que describen objetos concretos.
- Los discos se organizan en superficies, pistas y cilindros; la unidad de transferencia es el **bloque** o página, tanto para direccionar como para intercambiar datos entre memoria secundaria y principal.

### Flujo de una consulta
1. El usuario lanza una consulta sobre su vista (esquema externo) o directamente sobre el esquema lógico.
2. El SGBD traduce la consulta entre esquemas lógico y físico para determinar qué bloques del disco necesita.
3. Solicita al sistema operativo la lectura de esos bloques y los carga en los buffers de memoria principal.
4. Devuelve los resultados al programa o herramienta cliente sin modificar el estado de la base de datos.

![Ciclo de atención de una consulta SQL](figure:dbd-tema-1/consulta)
Caption: Flujo de traducción entre esquemas y lectura de bloques que siguen las consultas SELECT.

### Flujo de una actualización
1. Se repiten los pasos de traducción y lectura de bloques usados en las consultas.
2. El SGBD aplica las operaciones INSERT, DELETE o UPDATE en los buffers de memoria principal.
3. Solicita la escritura de los bloques modificados en disco según su política de transferencia.

![Ciclo de actualización con escritura diferida](figure:dbd-tema-1/actualizacion)
Caption: Pasos necesarios para aplicar cambios en memoria y persistir los bloques actualizados en disco.

### Claves operativas
- El SGBD sólo puede operar sobre los buffers que le asigna el sistema operativo.
- Toda lectura o escritura se realiza en unidades de bloque.
- Las escrituras pueden diferirse; la política de transferencia decide cuándo se persisten los cambios.

## 4. Arquitecturas básicas de SGBD
El despliegue de un SGBD puede seguir distintos modelos según la capacidad de las máquinas y la distribución de la lógica de aplicación.

### Arquitectura centralizada
- Terminales ligeras conectadas a un servidor central sin capacidad de proceso local.
- El servidor ejecuta las aplicaciones, el SGBD, la interfaz y gestiona los dispositivos de E/S.

![Terminales conectadas a un servidor central](figure:dbd-tema-1/centralizada)
Caption: Esquema clásico donde todo el procesamiento reside en el host central y las terminales sólo visualizan.

### Arquitectura cliente-servidor
- Servidores especializados (web, correo, ficheros, base de datos) comparten recursos por red.
- Los clientes ejecutan parte de la lógica de aplicación y ofrecen las interfaces de usuario.
- La red conecta sitios geográficamente distribuidos que colaboran sobre los mismos esquemas.

![Servicios especializados y clientes distribuidos](figure:dbd-tema-1/servicios)
Caption: Distribución de servidores dedicados y clientes que acceden al esquema lógico mediante la red.

### Cliente-servidor orientado a bases de datos
- El cliente ejecuta programas de interfaz y lógica (Visual, C++, Java…).
- El servidor se centra en procesar consultas SQL y transacciones.
- Ambos cooperan a través de la red sobre el mismo esquema lógico y físico.

![Reparto de responsabilidades en un SGBD cliente-servidor](figure:dbd-tema-1/cliente-servidor)
Caption: División entre programas cliente y motor del SGBD para gestionar consultas y transacciones.

### Laboratorio BDASI como ejemplo práctico
- SQL Developer actúa como cliente sobre el motor Oracle.
- La base de datos Ciclismo reside en el servidor del laboratorio.
- El esquema lógico se comparte con los alumnos mientras el esquema físico lo controla la administración.

![SQL Developer conectado al SGBD Oracle](figure:dbd-tema-1/lab)
Caption: Vista del entorno del laboratorio BDASI que combina cliente SQL y motor Oracle.

## 5. Objetivos de un SGBD
1. **Procesar correctamente transacciones en entornos concurrentes**:
   - Seguridad en bases de datos (Tema 7).
   - Procesamiento de transacciones e integridad (Tema 2).
   - Recuperación y tolerancia a fallos (Tema 3).
   - Control de concurrencia (Tema 4).
2. **Procesar eficientemente transacciones concurrentes**:
   - Implementación física de bases de datos (Tema 5).
   - Optimización de consultas (Tema 6).
   - Diseño físico de bases de datos relacionales (Tema 8).
