# Topic 1 · Database Management Systems (Sistemas de Gestión de Bases de Datos)

## Lesson objectives (Objetivos de la lección)
- Review the characteristics that define modern database technology (tecnología de bases de datos).
- Understand the components and functions that make up a Database Management System—DBMS (Sistema de Gestión de Bases de Datos, SGBD).
- Revisit the storage hierarchy and the data-transfer cycle between disk and memory.
- Compare central and client–server architectures used to deploy DBMS platforms.
- Identify the operational goals that guide DBMS design.

## Content map (Mapa de contenidos)
- Characteristics of database technology (tecnología de bases de datos).
- Database management systems (Sistemas de gestión de bases de datos).
- Data transfer inside a DBMS (Transferencia de datos en un SGBD).
- Baseline DBMS architectures (Arquitecturas básicas de SGBD).
- Priority objectives for a DBMS (Objetivos prioritarios de un SGBD).

## 1. Database technology (Tecnología de bases de datos)
Databases are structured collections of persistent data stored in secondary memory. “Database technology” covers the software that defines, creates, and manipulates those structures so the organization’s information system stays integrated and accessible.

### Essential properties (Propiedades esenciales)
- **Information-system support (Soporte del sistema de información):** centralizes organizational information and preserves it.
- **Service for multiple users (Servicio a distintos usuarios):** enables safe concurrency and tailored views for each group.
- **Data abstraction (Abstracción de datos):** separates logical structure specifications from their physical implementation.
- **Integrity and security (Integridad y seguridad):** governs data quality, concurrent access, failure recovery, and user authorization.

### Independence and schema levels (Independencia y niveles de esquema)
Three independent levels provide data independence:
- **Logical schema (Esquema lógico):** describes tables and relationships for queries.
- **Physical schema (Esquema físico):** defines how those structures live on disk—indexes, files, heaps.
- **External schemas (Esquemas externos):** deliver partial views for specific audiences.

![Schemas in the Cycling lab (Esquemas en el laboratorio de Ciclismo)](figure:dbd-tema-1/esquemas)
Caption: The BDASI lab environment with logical and physical schemas, the Cycling database on disk, and SQL Developer as the client.

### Technology overview (Panorama general de la tecnología)
Combining schema levels, concurrency control, security mechanisms, and persistence produces a layered architecture where the DBMS mediates between applications and data.

![Database technology feature summary (Resumen de características de la tecnología de bases de datos)](figure:dbd-tema-1/resumen)
Caption: Diagram summarizing data integration, partial views, integrity control, and security within a layered architecture.

## 2. Database management systems (Sistemas de gestión de bases de datos, SGBD)
A DBMS is the software tool that implements a data model to create, query, and administer databases. Each model proposes specific structures (tables, records, lists) and the operators used to manipulate them.

### Historical models and families (Modelos y familias históricas)
- Hierarchical (Jerárquicos): segment-tree structures.
- Network (En red): records linked by sets.
- Relational (Relacionales): tuple tables with relational algebra and SQL.
- Object-relational (Objeto-relacionales): extend the relational model with object-oriented types and constructors.

### Core DBMS functions (Funciones fundamentales de un SGBD)
- **Definition (Definición):** DDL languages describe schemas.
- **Manipulation (Manipulación):** DML languages support queries and updates.
- **Management (Gestión):** administration, security, backup, and monitoring tooling.

### Concurrency and parallelism (Concurrencia y paralelismo)
Modern DBMS platforms are multi-user: they coordinate concurrent transactions on the same CPU. Some also harness distributed parallelism across multiple CPUs or nodes to accelerate workloads.

## 3. Data transfer within a DBMS (Transferencia de datos en un SGBD)
DBMS engines manage large volumes of disk-resident data. They must optimize movement between secondary storage and main memory while respecting the storage hierarchy.

### Storage hierarchy (Jerarquía de almacenamiento)
- **Main memory and caches (Memoria principal y cachés):** fast access yet limited capacity; the CPU operates directly here.
- **Secondary memory (Memoria secundaria):** magnetic, optical, or tape storage with higher capacity but slower access.

### On-disk organization (Organización en disco)
- Relations are stored in files made of records that represent concrete objects.
- Disks use surfaces, tracks, and cylinders; the transfer unit is the **block (bloque)** or page for addressing and moving data between secondary and main memory.

### Query flow (Flujo de una consulta)
1. The user issues a query against their view (external schema) or the logical schema.
2. The DBMS translates the query across logical and physical schemas to identify required disk blocks.
3. It asks the operating system to read those blocks and loads them into main-memory buffers.
4. It returns results to the application or client tool without changing database state.

![Lifecycle of a SQL query (Ciclo de atención de una consulta SQL)](figure:dbd-tema-1/consulta)
Caption: Translation steps across schemas and block reads followed by SELECT queries.

### Update flow (Flujo de una actualización)
1. Repeat the translation and block-reading steps used for queries.
2. Apply INSERT, DELETE, or UPDATE operations inside the main-memory buffers.
3. Request that modified blocks be written back to disk according to the transfer policy.

![Deferred-write update cycle (Ciclo de actualización con escritura diferida)](figure:dbd-tema-1/actualizacion)
Caption: Steps for applying changes in memory and persisting updated blocks to disk.

### Operational keys (Claves operativas)
- The DBMS can operate only on the buffers assigned by the operating system.
- All reads or writes occur in block units (unidades de bloque).
- Writes may be deferred; the transfer policy decides when changes persist.

## 4. Baseline DBMS architectures (Arquitecturas básicas de SGBD)
DBMS deployments follow different models depending on machine capacity and how application logic is distributed.

### Centralized architecture (Arquitectura centralizada)
- Thin terminals connect to a central server with no local processing power.
- The server runs applications, the DBMS engine, user interfaces, and I/O devices.

![Terminals connected to a central server (Terminales conectadas a un servidor central)](figure:dbd-tema-1/centralizada)
Caption: Classic layout where all processing stays on the host and terminals only display.

### Client–server architecture (Arquitectura cliente-servidor)
- Specialized servers (web, mail, file, database) share resources over the network.
- Clients execute part of the application logic and host user interfaces.
- The network connects geographically distributed sites collaborating on the same schemas.

![Specialized services and distributed clients (Servicios especializados y clientes distribuidos)](figure:dbd-tema-1/servicios)
Caption: Dedicated servers and clients accessing the logical schema via the network.

### Database-oriented client–server (Cliente-servidor orientado a bases de datos)
- The client runs UI and logic programs (Visual, C++, Java…).
- The server focuses on SQL queries and transaction processing.
- Both cooperate over the network using the same logical and physical schema.

![Client–server responsibility split (Reparto de responsabilidades en un SGBD cliente-servidor)](figure:dbd-tema-1/cliente-servidor)
Caption: Division between client applications and the DBMS engine to handle queries and transactions.

### BDASI lab as a practical example (Laboratorio BDASI como ejemplo práctico)
- SQL Developer acts as the client on top of the Oracle engine.
- The Cycling database (base de datos Ciclismo) resides on the lab server.
- Students share the logical schema while the physical schema is managed by administration.

![SQL Developer connected to Oracle DBMS (SQL Developer conectado al SGBD Oracle)](figure:dbd-tema-1/lab)
Caption: BDASI lab environment combining the SQL client and Oracle engine.

## 5. DBMS objectives (Objetivos de un SGBD)
1. **Process transactions correctly in concurrent environments (Procesar correctamente transacciones en entornos concurrentes):**
   - Database security—Topic 7 (Seguridad en bases de datos).
   - Transaction processing and integrity—Topic 2 (Procesamiento de transacciones e integridad).
   - Recovery and fault tolerance—Topic 3 (Recuperación y tolerancia a fallos).
   - Concurrency control—Topic 4 (Control de concurrencia).
2. **Process concurrent transactions efficiently (Procesar eficientemente transacciones concurrentes):**
   - Physical database implementation—Topic 5 (Implementación física de bases de datos).
   - Query optimization—Topic 6 (Optimización de consultas).
   - Physical design for relational databases—Topic 8 (Diseño físico de bases de datos relacionales).
